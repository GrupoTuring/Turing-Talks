{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Frozen Lake","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"HsBDEvVCYbxt","colab_type":"code","colab":{}},"source":["import numpy as np\n","import gym\n","import copy\n","env = gym.make(\"FrozenLake-v0\", is_slippery=False)\n","\n","gamma = 0.9 # gamma é o desconto "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Vx57UsiMYkkh","colab_type":"code","outputId":"3aad45d0-f14a-4a3c-b2a1-add115bdcfdf","executionInfo":{"status":"ok","timestamp":1585453897814,"user_tz":180,"elapsed":2597,"user":{"displayName":"Fernando Matsumoto","photoUrl":"","userId":"02497909482286168309"}},"colab":{"base_uri":"https://localhost:8080/","height":35}},"source":["estado = 0 #numero de 0 a 15\n","ação = 0 # numero de 0 a 3\n","env.P[estado][ação] # = {(probability, nextstate, reward, done), ...}"],"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[(1.0, 0, 0.0, False)]"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"code","metadata":{"id":"RHvtl6dMcjs8","colab_type":"code","colab":{}},"source":["def policy_evaluation_v0(env, politica, gamma, delta_min):\n","\n","    função_valor = [0] * env.nS # Número de estados\n","    while True:\n","        delta = 0\n","        for estado in range(env.nS):\n","            v_antigo = função_valor[estado]\n","            função_valor[estado] = sum(politica[estado][acao] * prob * (r + gamma * função_valor[estado_seguinte])\n","                                          for acao in range(env.nA)\n","                                          for prob, estado_seguinte, r, done in env.P[estado][acao])\n","            delta = max(delta, abs(função_valor[estado] - v_antigo))\n","        if delta < delta_min:\n","            break\n","    return função_valor"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"hM2SM840T18_","colab_type":"code","colab":{}},"source":["def policy_evaluation_v1(env, gamma, erro_min):\n","    função_valor = [0] * env.nS # Número de estados\n","    while True:\n","        erro = 0\n","        for estado in range(env.nS):\n","            valor_ação = [0] * env.nA\n","            for ação in range(env.nA):\n","                valor_ação[ação] = sum(prob * (r + gamma * função_valor[estado_seguinte])\n","                                          for prob, estado_seguinte, r, done in env.P[estado][ação])\n","            valor_antigo = função_valor[estado]\n","            função_valor[estado] = max(valor_ação)\n","            erro = max(erro, abs(função_valor[estado] - valor_antigo))\n","        if erro < erro_min:\n","            break\n","\n","    return função_valor\n","    "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"DvYrtlNecf-I","colab_type":"code","colab":{}},"source":["def policy_improvement(env, função_valor):\n","\n","    politica = [[0]* env.nA for _ in range(env.nS)]\n","    for estado in range(env.nS):\n","        valor_ação = [0] * env.nA\n","        for acao in range(env.nA):\n","            valor_ação[acao] = sum(prob * (r + gamma * função_valor[estado_seguinte])\n","                       for prob, estado_seguinte, r, done in env.P[estado][acao])\n","        acao_gulosa = np.argmax(valor_ação) # retorna o índice da maior ação\n","        politica[estado][acao_gulosa] = 1\n","    return politica"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"XQZeRj1lcnP1","colab_type":"code","colab":{}},"source":["def policy_iteration(env, gamma):\n","        \n","    politica = {s: [1/env.nA] * env.nA  # Política aleatória\n","              for s in range(env.nS)}\n","    politica_antiga = None\n","    while politica != politica_antiga:\n","        politica_antiga = copy.deepcopy(politica)\n","        função_valor = policy_evaluation_v0(env, politica, gamma, 1e-5)\n","        politica = policy_improvement(env, função_valor)\n","    return função_valor, politica"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"gY-oOXSuwFNu","colab_type":"code","colab":{}},"source":["def value_iteration(env, gamma):    \n","\n","    função_valor = policy_evaluation_v1(env, gamma, 1e-5)\n","    politica = policy_improvement(env, função_valor)\n","    return função_valor, politica"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"A-aRWNklyBjt","colab_type":"code","colab":{}},"source":["def print_value_function(v):\n","    \"\"\"    \n","    Argumentos:\n","        v: uma lista de valores de cada estado\n","    \"\"\"\n","    for i in range(0, 16, 4): # Imprime o valor de cada estado\n","        print(' | '.join('{:.3f}'.format(x) for x in v[i:i+4]))\n","    "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"KWhzDZB9Lbzm","colab_type":"code","colab":{}},"source":["#Para visualizar a função valor \n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import numpy as np "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"Aji18ekUwVbK","colab_type":"code","outputId":"d300f1d4-50a3-4fad-9efc-aadd6e5c0b16","executionInfo":{"status":"ok","timestamp":1585453901447,"user_tz":180,"elapsed":2134,"user":{"displayName":"Fernando Matsumoto","photoUrl":"","userId":"02497909482286168309"}},"colab":{"base_uri":"https://localhost:8080/","height":269}},"source":["função_valor, politica = value_iteration(env, gamma)\n","v = [função_valor[0:4], \n","     função_valor[4:8], \n","     função_valor[8:12],\n","     função_valor[12:16]]\n","\n","visualizavel = np.array(v)\n","sns.heatmap(visualizavel, annot=True, cmap='summer')\n","plt.show()"],"execution_count":10,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nL5W7U8BUsQAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"iNSpVJnNw62M","colab_type":"code","outputId":"000f8c1d-7ba7-4b80-a4be-456da1250756","executionInfo":{"status":"ok","timestamp":1585453902277,"user_tz":180,"elapsed":2370,"user":{"displayName":"Fernando Matsumoto","photoUrl":"","userId":"02497909482286168309"}},"colab":{"base_uri":"https://localhost:8080/","height":269}},"source":["função_valor, politica = policy_iteration(env, gamma)\n","\n","v = [função_valor[0:4], \n","     função_valor[4:8], \n","     função_valor[8:12],\n","     função_valor[12:16]]\n","\n","visualizavel = np.array(v)\n","sns.heatmap(visualizavel, annot=True, cmap='summer')\n","plt.show()"],"execution_count":11,"outputs":[{"output_type":"display_data","data":{"image/png":"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\nL5W7U8BUsQAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"WviCX-qjZfO2","colab_type":"code","colab":{}},"source":["# Para a simulação do ambiente\n","import time\n","from IPython.display import clear_output"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"bSSbKp7k3gsm","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":107},"outputId":"20781682-60f0-49a4-c2b8-965a0417334f","executionInfo":{"status":"ok","timestamp":1585453909447,"user_tz":180,"elapsed":51,"user":{"displayName":"Fernando Matsumoto","photoUrl":"","userId":"02497909482286168309"}}},"source":["estado = env.reset()\n","env.render()\n","while True:\n","    time.sleep(1)\n","    ação = np.argmax(politica[estado])\n","    estado, r, done, info = env.step(ação)\n","    clear_output(wait=True)\n","    env.render()\n","    if done:\n","        break"],"execution_count":13,"outputs":[{"output_type":"stream","text":["  (Right)\n","SFFF\n","FHFH\n","FFFH\n","HFF\u001b[41mG\u001b[0m\n"],"name":"stdout"}]}]}